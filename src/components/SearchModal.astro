---
import countriesData from "../content/common/countries.json";
---

<div id="search-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
  <div class="flex items-start justify-center min-h-screen p-4 pt-16">
    <div class="bg-white rounded-lg w-full max-w-2xl max-h-[80vh] flex flex-col">
      <div class="p-4 border-b">
        <div class="flex items-center justify-between mb-4">
          <h2 class="text-xl font-semibold">Search Countries</h2>
          <button id="close-modal" class="text-gray-500 hover:text-gray-700">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <input
          type="text"
          id="country-search"
          placeholder="Type to search countries..."
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
      </div>
      <div id="countries-list" class="flex-1 overflow-y-auto p-4">
        {countriesData.map((country) => (
          <a
            href={`/${country.slug}/`}
            class="country-item block p-3 hover:bg-gray-100 rounded-lg transition-colors duration-200 border-b border-gray-100 last:border-b-0"
            data-name={country.name.toLowerCase()}
            data-common-name={country.commonName.toLowerCase()}
          >
            <div class="font-medium text-gray-900">{country.name}</div>
            {country.commonName !== country.name && (
              <div class="text-sm text-gray-500">{country.commonName}</div>
            )}
          </a>
        ))}
      </div>
    </div>
  </div>
</div>

<script>
  // Modal functionality
  const modal = document.getElementById('search-modal');
  const searchInput = document.getElementById('country-search') as HTMLInputElement;
  const closeModal = document.getElementById('close-modal');
  const countryItems = document.querySelectorAll('.country-item');

  // Open modal function (will be called from search button)
  function openSearchModal() {
    modal?.classList.remove('hidden');
    searchInput?.focus();
  }

  // Close modal
  function closeSearchModal() {
    modal?.classList.add('hidden');
    searchInput.value = '';
    showAllCountries();
  }

  // Show all countries
  function showAllCountries() {
    countryItems.forEach(item => {
      (item as HTMLElement).style.display = 'block';
    });
  }

  // Search functionality
  searchInput?.addEventListener('input', (e) => {
    const searchTerm = (e.target as HTMLInputElement).value.toLowerCase();
    
    countryItems.forEach(item => {
      const countryName = item.getAttribute('data-name') || '';
      const commonName = item.getAttribute('data-common-name') || '';
      
      if (countryName.includes(searchTerm) || commonName.includes(searchTerm)) {
        (item as HTMLElement).style.display = 'block';
      } else {
        (item as HTMLElement).style.display = 'none';
      }
    });
  });

  // Close modal when clicking outside
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      closeSearchModal();
    }
  });

  // Close modal with escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !modal?.classList.contains('hidden')) {
      closeSearchModal();
    }
  });

  // Close modal button
  closeModal?.addEventListener('click', closeSearchModal);

  // Make openSearchModal globally available
  (window as any).openSearchModal = openSearchModal;
</script>
