---
import Layout from "../layouts/Layout.astro";
import { getCollection, getEntry } from "astro:content";

export async function getStaticPaths() {
  const countries = await getCollection("countries");
  return countries.map((country) => ({
    params: { country: country.id },
    props: { country: country.data }
  }));
}

const { country } = Astro.props;
const [tops, indicators] = await Promise.all([
  getEntry("countryTops", country.id)?.then((t) => t.data),
  getCollection("indicators")
]);

const bestIn =
  tops?.filter((it) => it.type === "max").sort((a, b) => b.date - a.date) || [];
const worstIn =
  tops?.filter((it) => it.type === "min").sort((a, b) => b.date - a.date) || [];

const getIndicator = (id: string) => {
  return indicators.find((indicator) => indicator.id === id)!.data;
};
---

<Layout title={`Country: ${country.name}`}>
  <article>
    <h1>{country.name}</h1>
    <h3>Best In</h3>
    <ul>
      {
        bestIn.length > 0 &&
          bestIn.map((top) => (
            <li>
              ({top.date}) - {getIndicator(top.indicatorId).name}: {top.value}
            </li>
          ))
      }
      {!bestIn.length && <li>No tops available</li>}
    </ul>
    <h3>Worst In</h3>
    <ul>
      {
        worstIn.length > 0 &&
          worstIn.map((top) => (
            <li>
              ({top.date}) - {getIndicator(top.indicatorId).name}: {top.value}
            </li>
          ))
      }
      {!worstIn.length && <li>No bottoms available</li>}
    </ul>
  </article>
</Layout>
